<?php

namespace App\Controllers;

use App\Models\UserModel;
use CodeIgniter\Exceptions\PageNotFoundException;

class User extends BaseController
{
    protected $userModel;

    public function __construct()
    {
        $this->userModel = new UserModel();
    }

    public function index()
    {
        // Cek hak akses admin
        if (session()->get('level') != 'admin') {
            return redirect()->to('/login')->with('error', 'Akses terbatas untuk admin');
        }

        $search = $this->request->getGet('search');

        $data = [
            'user' => $this->userModel->getAllUsersQuery($search)->paginate(10),
            'pager' => $this->userModel->pager,
            'search' => $search
        ];

        return view('/admin/user/index', $data);
    }

    public function create()
    {
        // Cek hak akses admin
        if (session()->get('level') != 'admin') {
            return redirect()->to('/login');
        }

        return view('admin/user/create');
    }

    public function store()
    {
        // Cek hak akses admin
        if (session()->get('level') != 'admin') {
            return redirect()->to('/login');
        }

        $validation = \Config\Services::validation();

        $rules = [
            'username' => 'required|min_length[3]|max_length[50]|is_unique[user.username]',
            'email' => 'required|valid_email|is_unique[user.email]',
            'password' => 'required|min_length[6]',
            'nama' => 'required|min_length[3]',
            'level' => 'required|in_list[admin,user]'
        ];

        if (!$this->validate($rules)) {
            return redirect()->back()->withInput()->with('errors', $validation->getErrors());
        }

        $data = [
            'username' => $this->request->getPost('username'),
            'email' => $this->request->getPost('email'),
            'password' => $this->request->getPost('password'),
            'nama' => $this->request->getPost('nama'),
            'nik' => $this->request->getPost('nik'),
            'no_hp' => $this->request->getPost('no_hp'),
            'alamat' => $this->request->getPost('alamat'),
            'unit_kerja' => $this->request->getPost('unit_kerja'),
            'level' => $this->request->getPost('level')
        ];

        $this->userModel->save($data);

        return redirect()->to('/admin/user')->with('success', 'User berhasil ditambahkan');
    }

    public function edit($id)
    {
        // Cek hak akses admin
        if (session()->get('level') != 'admin') {
            return redirect()->to('/login');
        }

        $user = $this->userModel->find($id);
        if (!$user) {
            throw new PageNotFoundException("User tidak ditemukan");
        }

        return view('admin/user/edit', ['user' => $user]);
    }

    public function update($id)
    {
        // Cek hak akses admin
        if (session()->get('level') != 'admin') {
            return redirect()->to('/login');
        }

        $user = $this->userModel->find($id);
        if (!$user) {
            throw new PageNotFoundException("User tidak ditemukan");
        }

        $rules = [
            'username' => "required|min_length[3]|max_length[50]|is_unique[user.username,id,$id]",
            'email' => "required|valid_email|is_unique[user.email,id,$id]",
            'nama' => 'required|min_length[3]',
            'level' => 'required|in_list[admin,user]'
        ];

        // Jika password diisi, tambahkan validasi
        if ($this->request->getPost('password')) {
            $rules['password'] = 'min_length[6]';
        }

        if (!$this->validate($rules)) {
            return redirect()->back()->withInput()->with('errors', validation_errors());
        }

        $data = [
            'id' => $id,
            'username' => $this->request->getPost('username'),
            'email' => $this->request->getPost('email'),
            'nama' => $this->request->getPost('nama'),
            'nik' => $this->request->getPost('nik'),
            'no_hp' => $this->request->getPost('no_hp'),
            'alamat' => $this->request->getPost('alamat'),
            'unit_kerja' => $this->request->getPost('unit_kerja'),
            'level' => $this->request->getPost('level')
        ];

        // Update password hanya jika diisi
        if ($this->request->getPost('password')) {
            $data['password'] = $this->request->getPost('password');
        }

        $this->userModel->save($data);

        return redirect()->to('/admin/user')->with('success', 'User berhasil diperbarui');
    }

    public function delete($id)
    {
        // Cek hak akses admin
        if (session()->get('level') != 'admin') {
            return redirect()->to('/login');
        }

        // Tidak boleh hapus diri sendiri
        if ($id == session()->get('id')) {
            return redirect()->to('/admin/user')->with('error', 'Tidak dapat menghapus akun sendiri');
        }

        $user = $this->userModel->find($id);
        if (!$user) {
            throw new PageNotFoundException("User tidak ditemukan");
        }

        $this->userModel->delete($id);

        return redirect()->to('/admin/user')->with('success', 'User berhasil dihapus');
    }
}
